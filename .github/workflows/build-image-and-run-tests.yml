name: Build test image and run tests

on:
  push:

jobs:
  build:
    name: 'Build images for tests'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - name: Get branch name
        id: git-branch-name
        uses: EthanSK/git-branch-name-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Checkout injective-dex
        uses: actions/checkout@master
        with:
          repository: InjectiveLabs/injective-dex
          ref: ${{ github.ref }}
          path: ./injective-dex
      - name: Restore cached Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ env.GIT_BRANCH_NAME }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Build DEX image
        uses: docker/build-push-action@v2
        with:
          context: ./injective-dex/
          file: ./injective-dex/.github/Dockerfile
          push: false
          tags: public.ecr.aws/l9h3g6c6/injective-dex:${{ env.GIT_BRANCH_NAME }}
          outputs: type=docker,dest=/tmp/dex-image.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Upload DEX artifact
        uses: actions/upload-artifact@v2
        with:
          name: dex-image
          path: /tmp/dex-image.tar
      - name: Checkout cypress-ts repo
        uses: actions/checkout@master
        with:
          repository: Tofel/cypress-ts
          ref: 'master'
          token: ${{ secrets.BARTEKS_PAT }}
          path: ./cypress-ts
      - name: Build Cypress test image
        uses: docker/build-push-action@v2
        with:
          context: ./cypress-ts
          file: ./cypress-ts/.github/Dockerfile
          push: false
          tags: injective-cypress:${{ env.GIT_BRANCH_NAME }}
          outputs: type=docker,dest=/tmp/cypress-image.tar
      - name: Upload Cypress artifact
        uses: actions/upload-artifact@v2
        with:
          name: cypress-image
          path: /tmp/cypress-image.tar
          retention-days: 1
  run_e2e_tests:
    name: 'Run e2e tests'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    needs: build
    env:
      DEX_IMAGE_TAG: $GIT_BRANCH_NAME
      DEX_FEE_RECIPIENT: ${{ secrets.APP_FEE_RECIPIENT }}
      DEX_ALCHEMY_API_KOVAN_KEY: ${{ secrets.APP_ALCHEMY_KOVAN_KEY }}
      EXCHANGE_ALCHEMY_API_KOVAN_KEY: ${{ secrets.APP_ALCHEMY_KOVAN_KEY }}
      CYPRESS_TEST_TAG: $GIT_BRANCH_NAME
      CYPRESS_GROUP: '${{ github.ref_name }}-${{github.run_attempt}}'
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      CYPRESS_SPEC_FILE: markets-tests
    steps:
      - name: Get branch name
        id: git-branch-name
        uses: EthanSK/git-branch-name-action@v1
      - name: Print dex image tag
        run: echo ${{ env.DEX_IMAGE_TAG }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download DEX artifact
        uses: actions/download-artifact@v2
        with:
          name: dex-image
          path: /tmp
      - name: Load Docker images
        run: |
          docker load --input /tmp/dex-image.tar
          docker load --input /tmp/cypress-image.tar
      - name: Checkout injective-devops
        uses: actions/checkout@master
        with:
          repository: InjectiveLabs/injective-devops
          ref: 'f/standalone_env'
          token: ${{ secrets.BARTEKS_PAT }}
          path: ./injective-devops
      - name: Start standalone network
        run: |
          cd injective-devops/network/standalone
          docker-compose -f docker-compose-base.yaml -f docker-compose-dex.yaml build --build-arg IMAGE_TAG=${{ env.DEX_IMAGE_TAG }}
          docker-compose -f docker-compose-base.yaml -f docker-compose-dex.yaml up -d
      - name: Execute Cypress tests
        run: docker-compose -f docker-compose-base.yaml -f docker-compose-dex.yaml -f docker-compose-cypress.yaml start injective-cypress
